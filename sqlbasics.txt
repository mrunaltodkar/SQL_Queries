1.     Display all departments from department table.
mysql> SELECT * FROM departments;

2.	Display all employees from employee table.
mysql> SELECT * FROM employees;

3.	Select the employee in department 30.
mysql> SELECT * FROM employees WHERE department_id=30;

4.	List the names, numbers and departmentno of all clerks.
mysql> SELECT first_name, last_name, phone_number, department_id FROM employees where job_id LIKE '%CLERK%';

5.	Find the depart numbers and the name of employee of all dept with Deptno greater or equal to 20.
mysql>  SELECT department_id, first_name, last_name from employees where department_id>=20;

6.	Find the employees whose commission is greater than their salary.


7.	Find the employees whose commission is greater than 60 percent of their salary.
mysql> SELECT * FROM employees WHERE commission_pct > salary*3/5;

8.	Find the employee whose commission is greater than 50 percent of their salary.
mysql> SELECT * FROM employees WHERE commission_pct > salary/2;

9.	List the name, job and salary of all employees in dept 20 who earn more than 2000.
mysql> SELECT first_name, job_id, salary from employees WHERE department_id=20 AND salary > 2000;

10.	Find all salesmen in dept 30 whose salary is greater than or equal to Rs. 1500.
mysql> SELECT * from employees WHERE department_id=30 AND salary >= 1500 AND job_id LIKE "%SA";

11.	Find all the employees whose job is either a president or manager.
mysql> select * from employees where job_id LIKE "%PRES%" OR job_id LIKE "%MAN%" OR job_id LIKE "%MGR%";

12.	Find all managers who are not in dept 30.
mysql> select * from employees where (job_id LIKE "%MAN%" OR job_id LIKE "%MGR%") AND NOT department_id=30;
or
mysql> select * from employees where (job_id LIKE "%MAN%" OR job_id LIKE "%MGR%") AND department_id!=30

13.	Find the details of all managers and clerks in dept 10.
mysql> SELECT * FROM employees where department_id=10 AND (job_id LIKE "%MAN%" or job_id LIKE "%MGR%" or job_id LIKE "%CLERK%");

14.	Find the details of all manager (in any dept) and all clerks in dept 10
mysql> SELECT * FROM employees where (job_id LIKE "%MAN%" OR job_id LIKE "%MGR%") OR department_id=10 AND job_id LIKE "%CLERK%";

15.	Find the details of all managers in dept 10 and all clerks in dept 20.
select * from employees where (department_id=10 AND job_id LIKE "%MAN%" OR job_id LIKE "%MGR%") AND (department_id=20 AND job_id LIKE "%CLERK%");

16.	Find all employees who are neither clerks nor manager but whose salary is greater than or equal to Rs. 2000.
mysql> select * from employees where (job_id NOT LIKE "%MAN%" AND job_id NOT LIKE "%MGR%" AND job_id NOT LIKE "%CLERK%") AND salary>=2000;

17.	Find the employees who earns between Rs. 1200 and Rs.1400.
mysql> SELECT * FROM employees WHERE salary BETWEEN 1200 AND 1400;

18.	Find the employees who are clerks, analysts or salesman.
mysql> SELECT * FROM employees WHERE job_id LIKE "%CLERK%" OR job_id LIKE "%SA%";

19.	Find the employees who are not clerks, analyst or salesman.
mysql> SELECT * FROM employees WHERE job_id NOT LIKE "%CLERK%" AND job_id NOT LIKE "%SA%";

20.	Find the employees who do not receive a commission i.e. commission is NULL.
mysql> SELECT * FROM employees WHERE commission_pct IS NULL;

21.	Find the employee whose commission is Rs. 0.
mysql> SELECT * FROM employees WHERE commission_pct IS NULL;

22.	Find the different jobs of the employees receiving commission.
mysql> SELECT job_id FROM employees WHERE commission_pct IS NOT NULL;

23.	Find all employees who do not receive a commission or whose Commission is less than Rs. 100. 
mysql> select salary, commission_pct from employees where commission_pct is null OR salary * commission_pct < 1000;

24.	The employees who not receiving commission are entailed to Rs. 250, Show the net earnings of all employees. (find about nvl() )


25.	Find all employees whose total earnings are greater than Rs. 2000.


26.	Find all employees whose names begin with m.
mysql> SELECT * FROM employees WHERE first_name LIKE "m%";

27.	Find all employees whose names end with m.
mysql> SELECT * FROM employees WHERE first_name LIKE "%m";

28.	Find all employees whose names contain the letter m.
mysql> SELECT * FROM employees WHERE first_name LIKE "%m%";

29.	Find the employees whose names are 5 characters long and end with n.
mysql> SELECT * FROM employees WHERE LENGTH(first_name) = 5 AND first_name LIKE "%n";

30.	Find the employees who have the letter r as the third letter in their name.
mysql> SELECT * FROM employees WHERE first_name LIKE "__r%";

31.	Find all employees hired in month of February (of any year).
mysql> SELECT hire_date FROM employees WHERE month(hire_date)=02;

32.	Find all employees who were hired on the last day of the month. 
mysql> SELECT first_name, LAST_DAY(hire_date) FROM employees WHERE hire_date=last_day(hire_date);

33.	Find the employees who were hired more than 12 years ago.
mysql> SELECT first_name, hire_date FROM employees WHERE DATEDIFF(NOW(),hire_date) > 12;

34.	Find the managers hired in the year 2007.
mysql> SELECT * FROM employees WHERE (job_id LIKE '%MAN%' OR job_id LIKE '%MGR%') AND YEAR(hire_date)=2007;

35.	Display the names and the jobs of all employees, separated by ','(comma). For example (smith, clerk).
mysql> SELECT CONCAT(first_name,",",job_id) AS info from employees; 

36.	Display the names of all employees with the initial letter only in capitals.
mysql> SELECT first_name FROM employees WHERE first_name=UCASE(first_name);

37.	Display the names of all employees, right aligning them to 15 characters.


38.	Display the names of all employees, padding them to right up-to 15 characters with '-'.
mysql> select RPAD((concat(first_name,' ',last_name)),15,'_') from employees;

39.	Display the length of the name of all employees.
mysql> SELECT first_name,last_name, length(first_name)+length(last_name) FROM employees;

40.	Display the names of all employees centering them with 20 characters.


41.	Display the names of all employees without any leading 'a'.
mysql> SELECT first_name FROM employees WHERE first_name NOT LIKE "a%";

42.	Display the names of all employees without any trailing 'r'.
mysql> SELECT first_name FROM employees WHERE first_name NOT LIKE '%r';

43.	Show the first three characters of the names of all employees.
mysql> SELECT SUBSTRING(first_name,1,3) FROM employees;

44.	Show the last three characters of the names of all employees.
mysql> SELECT RIGHT(first_name,3) FROM employees;

45.	Display the names of all employees replacing any 'a' with 'e'.
mysql> SELECT REPLACE(first_name, "a", "e") FROM employees;

46.	Display the names of all employees and the position at which the string 'ar' occurs in the name.
mysql> SELECT first_name,POSITION("ar" IN first_name) FROM employees;

47.	Show the salary of all employees rounding it to the nearest Rs. 1000. For example (3790 will be 4000)
mysql> SELECT ROUND(salary,1000) FROM employees;

48.	Show the daily salary of all employees assuming a month has 30 days.
mysql> SELECT first_name, salary/30 AS 'salary' from employees;

49.	Display the name of all employees, and their bonus. Assume each Employee gets a bonus of 20 percent of his salary subject to the Maximum of Rs. 500.
mysql> SELECT first_name, salary*0.2 AS salary_bonus, IF(salary*0.2<500,salary*0.2,500) FROM employees;

50.	Display the name of all employees, and their bonus. Assume each employee gets a bonus of 20 percent of his salary subject to the Maximum of Rs. 200.
mysql> SELECT first_name, salary*0.2 AS salary_bonus, IF(salary*0.2<200,salary*0.2,200) FROM employees

51.	For each employee display the number of days passed since the employee joined the company.
SELECT first_name, DATEDIFF(DATE_FORMAT(current_date,'%y-%m-%d'), hire_date) AS date_count FROM employees WHERE DATEDIFF(DATE_FORMAT(current_date,'%y-%m-%d'), hire_date);
or
SELECT first_name, DATEDIFF(CURDATE(), hire_date) AS date FROM employees WHERE DATEDIFF(CURDATE(), hire_date);

52.	For each employee display the number of months passed since the Employee joined the company.
mysql> SELECT first_name, TIMESTAMPDIFF(MONTH, hire_date, CURDATE()) AS month_diff from employees;

53.	Display the tenure of service in the years, months and days for all Employees in character format. Assume every month has 30 days.


54.	Display the employee details in the following manner. 'Miler joined on the twenty-third of January of the year nineteen hundred and eighty Two'.


55.	Display the details of all employees, sorted on the names.
mysql> select first_name, last_name FROM employees ORDER BY first_name ASC;

56.	Display the name of all employees, based on their tenure, with the oldest employee coming first.
mysql> SELECT * FROM employees ORDER BY hire_date;
or
mysql> select first_name, TIMESTAMPDIFF(year,hire_date,now()) AS tenure FROM employees ORDER BY TIMESTAMPDIFF(year,hire_date,now())  DESC;

57.	Display the names, job and salary of all employees sorted on jobs and Salary.
mysql> SELECT first_name,last_name,job_id,salary FROM employees ORDER BY job_id,salary;

58.	Display the names, job and salary of all employees, sorted on jobs and within job, sorted on the descending order of salary.
mysql> SELECT first_name,last_name,job_id,salary FROM employees ORDER BY job_id,salary DESC;

59.	Display the names, job and salary of all employees, sorted on Descending order of job and within job, sorted on the descending order of salary.
mysql> SELECT first_name,last_name,job_id,salary FROM employees ORDER BY job_id DESC,salary DESC;

60.	 Display the name, month and year of all employees, sorted on the month of their hire date irrespective of the year.
mysql> SELECT first_name,DATE_FORMAT(hire_date, '%M %Y') FROM employees ORDER BY MONTH(hire_date);

61.	Display the name, month and year of joining of all employees, sorted on the month of their hire date, and within that on the year, with the earliest year appearing first.
mysql> SELECT first_name,DATE_FORMAT(hire_date, '%M %Y') FROM employees ORDER BY DATE_FORMAT(hire_date, '%Y'), MONTH(hire_date);



